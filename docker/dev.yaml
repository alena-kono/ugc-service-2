version: "3.8"

include:
  - kafka.yaml
  - clickhouse.yaml
  - mongo.yaml

services:
  nginx:
    image: nginx:1.25
    container_name: nginx_dev
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/site.conf:/etc/nginx/conf.d/default.conf
      - ../logs/nginx/:/var/log/nginx/
    restart: unless-stopped
    ports:
      - "80:80"

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: unless-stopped
    ports:
      - "6831:6831/udp"
      - "16686:16686"

  authDB:
    image: postgres:15.3
    container_name: auth_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: auth
      POSTGRES_PASSWORD: auth
      POSTGRES_DB: auth_db
    ports:
      - "5431:5432"
    volumes:
      - auth_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth -d auth_db"]
      interval: 5s
      timeout: 5s
      retries: 10

  filmsDB:
    image: postgres:15.3
    container_name: films_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: films
      POSTGRES_PASSWORD: films
      POSTGRES_DB: films_db
    ports:
      - "5432:5432"
    volumes:
      - films_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U films -d films_db"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7.0.11
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 10

  elastic:
    image: elasticsearch:8.7.1
    container_name: elastic_dev
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - logger.level=ERROR
    ports:
      - "9200:9200"
    volumes:
      - elastic:/usr/share/elasticsearch/data
    healthcheck:
      test: curl -s http://elastic:9200 > /dev/null || exit 1
      interval: 5s
      timeout: 10s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 1G

  elastic_search_gui:
    image: cars10/elasticvue:latest
    container_name: movies_api_dev_elastic_search_gui
    ports:
      - "8080:8080"

  elastic-logs:
    image: elasticsearch:8.10.2
    container_name: elastic_logs_dev
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - cluster.routing.allocation.enable=all
      - logger.level=ERROR
    ports:
      - "9201:9200"
    volumes:
      - elastic_logs_data:/usr/share/elasticsearch/data
    healthcheck:
      test: curl -s http://elastic-logs:9200 > /dev/null || exit 1
      interval: 5s
      timeout: 10s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 1G

  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.2
    container_name: logstash_dev
    depends_on:
      elastic-logs:
        condition: service_healthy
    healthcheck:
      test: curl -s http://logstash:9600 > /dev/null || exit 1
    environment:
      XPACK_MONITORING_ENABLED: "false"
      ES_HOST: "elastic-logs:9200"
    ports:
      - "5044:5044/udp"
    volumes:
      - ./elk/logstash.conf:/config/logstash.conf:ro
      - ../logs/nginx/:/var/log/nginx/:ro
    command: logstash -f /config/logstash.conf

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    container_name: kibana_dev
    ports:
      - "5601:5601"
    depends_on:
      elastic-logs:
        condition: service_healthy
    healthcheck:
      test: curl -s http://kibana:5601 > /dev/null || exit 1

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.10.2
    container_name: filebeat_dev
    volumes:
      - ./elk/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ../logs/apps:/usr/share/filebeat/logs/apps
      - ../logs/nginx:/var/log/nginx:ro
    depends_on:
      elastic-logs:
        condition: service_healthy
      logstash:
        condition: service_healthy
      kibana:
        condition: service_healthy
    command: filebeat -e

volumes:
  auth_db:
  films_db:
  elastic:
  elastic_logs_data:
